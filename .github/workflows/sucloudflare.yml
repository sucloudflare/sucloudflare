# Nome da Action:
name: Snake Game

# Controlador do tempo para a atualização dos arquivos.
on:
  schedule:
    # Atualizar a cada 5 horas.
    - cron: "0 */5 * * *"

  # Permitir execução na lista de Actions (utilizado para testes de build).
  workflow_dispatch:

# Regras
jobs:
  build:
    runs-on: ubuntu-latest
    steps:

    # Verificar o repositório sob $GITHUB_WORKSPACE para que seu trabalho possa acessá-lo.
    - uses: actions/checkout@v2

    # Repositório que será utilizado para gerar os arquivos.
    - uses: Platane/snk@master
      id: snake-gif
      with:
        github_user_name: sucloudflare # Substitua pelo seu nome de usuário.
        gif_out_path: dist/github-contribution-grid-snake.gif
        svg_out_path: dist/github-contribution-grid-snake.svg

    # Configurar o git e autenticar usando SSH
    - name: Configurar git e autenticar SSH
      run: |
        git config --global user.email "actions@github.com"
        git config --global user.name "GitHub Actions"
        mkdir -p ~/.ssh
        echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_ed25519
        chmod 600 ~/.ssh/id_ed25519
        ssh-keyscan github.com >> ~/.ssh/known_hosts
        eval "$(ssh-agent -s)"
        ssh-add ~/.ssh/id_ed25519

    # Exibir o status do git (opcional).
    - run: git status

    # Para as atualizações.
    - name: Commit e Push das mudanças
      run: |
        git add .
        git commit -m "Atualizar grade de contribuições do GitHub Snake"
        git push

    - uses: crazy-max/ghaction-github-pages@v2.1.3
      with:
        # A branch de saída que mencionamos acima.
        target_branch: output
        build_dir: dist
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
